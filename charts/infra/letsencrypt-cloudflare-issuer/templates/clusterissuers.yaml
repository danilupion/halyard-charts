{{- range $i, $issuer := .Values.instances }}
{{- $cf   := default (dict) $issuer.cloudflare -}}
{{- $sec  := default (dict) (get $cf "secret") -}}
{{- $secretName := default "" (get $sec "name") -}}
{{- $secretKey  := default "" (get $sec "key")  -}}
{{- $apiRef := default (dict) (get $cf "apiTokenSecretRef") -}}
{{- $apiRefName := default "" (get $apiRef "name") -}}
{{- $apiRefKey  := default "" (get $apiRef "key")  -}}
{{- $resolvedName := default $secretName $apiRefName -}}         {{/* prefer apiTokenSecretRef.name, else secret.name */}}
{{- $resolvedKey  := default "api-token" (coalesce $apiRefKey $secretKey) -}}  {{/* prefer apiTokenSecretRef.key, else secret.key, else "api-token" */}}

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ required "instances[].name is required" $issuer.name }}
  labels:
    {{- include "common.labels" $ | nindent 4 }}
  {{- with $.Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $.Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  acme:
    email: {{ required (printf "instances[%d].acme.email is required" $i) $issuer.acme.email }}
    server: {{ default "https://acme-v02.api.letsencrypt.org/directory" $issuer.acme.server }}
    privateKeySecretRef:
      name: {{ default (printf "%s-key" $issuer.name) $issuer.acme.privateKeySecretName }}
    solvers:
      - dns01:
          cloudflare:
            apiTokenSecretRef:
              name: {{ required (printf "instances[%d] requires cloudflare.apiTokenSecretRef.name or cloudflare.secret.name" $i) $resolvedName }}
              key:  {{ $resolvedKey }}
{{- $solvers := default (list) $issuer.solvers -}}
{{- if gt (len $solvers) 0 -}}
  {{- $s := index $solvers 0 -}}
  {{- if $s.selector }}
      selector:
        {{- toYaml $s.selector | nindent 8 }}
  {{- end }}
{{- end }}
---
{{- end }}
