# Common labels/annotations applied to all resources
commonLabels: {}
commonAnnotations: {}

# Override the name of the chart
nameOverride: ""

# Override the full name of the resources
# This is useful for creating simpler service names
# Example: fullnameOverride: "crm" creates a service named "crm" instead of "release-civicrm"
fullnameOverride: ""

# CiviCRM container image
image:
  repository: civicrm/civicrm
  tag: 6.7.1@sha256:01baaf0425e1168d432fdab6637d33866665538c9b3e8f177930be44b247ff8c
  pullPolicy: IfNotPresent

# Image pull secrets for private registries
imagePullSecrets: []

# Number of CiviCRM replicas (recommend 1 for stateful applications)
replicaCount: 1

# Service configuration
service:
  type: ClusterIP
  # Port 8080 is used to avoid requiring root privileges (non-root Apache)
  port: 8080
  annotations: {}

# Ingress configuration for external access
ingress:
  enabled: false
  className: ""
  annotations: {}
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: civicrm.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
    # - secretName: civicrm-tls
    #   hosts:
    #     - civicrm.example.com

# Persistent storage for CiviCRM directories
persistence:
  # Public files (uploads, generated files)
  public:
    enabled: true
    storageClassName: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    # Optional: use existing PVC
    existingClaim: ""

  # Private files (templates, logs)
  private:
    enabled: true
    storageClassName: ""
    accessModes:
      - ReadWriteOnce
    size: 5Gi
    existingClaim: ""

  # Extensions directory
  extensions:
    enabled: true
    storageClassName: ""
    accessModes:
      - ReadWriteOnce
    size: 2Gi
    existingClaim: ""

# Database configuration (external database required)
database:
  host: ""
  port: 3306
  name: civicrm
  user: civicrm
  # Password should be provided via existing secret
  existingSecret: ""
  existingSecretPasswordKey: "password"

# CiviCRM configuration
civicrm:
  # Base URL for CiviCRM (required)
  baseUrl: "http://civicrm.example.com"

  # Additional environment variables
  extraEnv: []
    # - name: CIVICRM_SETTING_DOMAIN_DEBUG
    #   value: "1"

  # Extra environment variables from secrets/configmaps
  extraEnvFrom: []
    # - secretRef:
    #     name: civicrm-secrets

# Resource limits and requests
resources: {}
  # limits:
  #   cpu: 1000m
  #   memory: 1Gi
  # requests:
  #   cpu: 500m
  #   memory: 512Mi

# Pod security context
podSecurityContext:
  fsGroup: 33 # www-data

# Container security context
securityContext:
  runAsUser: 33 # www-data
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Liveness probe configuration
livenessProbe:
  httpGet:
    path: /civicrm/login
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6

# Readiness probe configuration
readinessProbe:
  httpGet:
    path: /civicrm/login
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Node selector for pod assignment
nodeSelector: {}

# Tolerations for pod assignment
tolerations: []

# Affinity for pod assignment
affinity: {}
