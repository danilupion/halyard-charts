{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "commonLabels": {
      "type": "object",
      "description": "Labels applied to all resources"
    },
    "commonAnnotations": {
      "type": "object",
      "description": "Annotations applied to all resources"
    },
    "nameOverride": {
      "type": "string",
      "description": "Override the chart name"
    },
    "fullnameOverride": {
      "type": "string",
      "description": "Override the full resource name"
    },
    "replicaCount": {
      "type": "integer",
      "minimum": 1,
      "description": "Number of pod replicas"
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Container image repository"
        },
        "tag": {
          "type": "string",
          "description": "Container image tag"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "description": "Image pull policy"
        }
      },
      "required": ["repository", "tag", "pullPolicy"]
    },
    "imagePullSecrets": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": ["name"],
        "additionalProperties": false
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer"],
          "description": "Service type"
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "Primary service port"
        },
        "additionalPorts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "port": {
                "type": "integer",
                "minimum": 1,
                "maximum": 65535
              },
              "targetPort": {
                "type": ["integer", "string"],
                "description": "Target port or name"
              },
              "protocol": {
                "type": "string",
                "enum": ["TCP", "UDP"],
                "default": "TCP"
              }
            },
            "required": ["name", "port"],
            "additionalProperties": false
          }
        },
        "annotations": {
          "type": "object",
          "description": "Annotations applied to the service"
        }
      },
      "required": ["type", "port"]
    },
    "ingress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable ingress resource"
        },
        "className": {
          "type": "string",
          "description": "Ingress class name"
        },
        "annotations": {
          "type": "object",
          "description": "Annotations applied to the ingress"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "host": { "type": "string" },
              "paths": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": { "type": "string" },
                    "pathType": {
                      "type": "string",
                      "enum": ["Prefix", "Exact", "ImplementationSpecific"]
                    }
                  },
                  "required": ["path", "pathType"],
                  "additionalProperties": false
                }
              }
            },
            "required": ["host", "paths"],
            "additionalProperties": false
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "secretName": { "type": "string" },
              "hosts": {
                "type": "array",
                "items": { "type": "string" }
              }
            },
            "required": ["secretName", "hosts"],
            "additionalProperties": false
          }
        }
      },
      "required": ["enabled"]
    },
    "persistence": {
      "type": "object",
      "properties": {
        "config": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "storageClassName": { "type": "string" },
            "accessModes": {
              "type": "array",
              "items": { "type": "string" }
            },
            "size": { "type": "string" },
            "existingClaim": { "type": "string" }
          },
          "required": ["enabled", "size"]
        }
      },
      "required": ["config"]
    },
    "linuxserver": {
      "type": "object",
      "properties": {
        "puid": { "type": "string" },
        "pgid": { "type": "string" },
        "timezone": { "type": "string" },
        "umask": { "type": "string" },
        "subfolder": { "type": "string" }
      }
    },
    "extraEnv": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "value": { "type": "string" },
          "valueFrom": { "type": "object" }
        },
        "required": ["name"],
        "additionalProperties": true
      }
    },
    "extraEnvFrom": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "podAnnotations": {
      "type": "object"
    },
    "podSecurityContext": {
      "type": "object"
    },
    "securityContext": {
      "type": "object"
    },
    "resources": {
      "type": "object"
    },
    "nodeSelector": {
      "type": "object"
    },
    "tolerations": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "affinity": {
      "type": "object"
    }
  },
  "additionalProperties": false
}
